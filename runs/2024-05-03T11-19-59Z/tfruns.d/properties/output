
> FLAGS<- flags(
+   flag_numeric("nodes", 32),
+   flag_numeric("batch_size",32),
+   flag_string("activation","relu"),
+   flag_numeric("learning_ra ..." ... [TRUNCATED] 

> model = keras_model_sequential()

> model %>%
+   layer_dense(units = FLAGS$nodes, activation = FLAGS$activation, input_shape = dim(carbonTrainingFinal)[2]) %>%
+   layer_dropout(rate= .... [TRUNCATED] 

> model %>% compile(
+   loss="mse",
+   optimizer=optimizer_adam(lr=FLAGS$learning_rate)
+ )

> model %>%fit(  as.matrix(carbonTrainingData),
+                carbonTrainingLabels,
+                batch_size=FLAGS$batch_size,
+                 .... [TRUNCATED] 
